.n-carousel__content {
  display: flex;
  will-change: scroll;
  outline: 0;
  box-sizing: border-box;
  padding: var(--peek-y, 0) var(--peek-x, 0);
  overflow-anchor: none; // Prevent Chrome from scrolling parent carousels while animating carousel height

  @media (prefers-reduced-motion: reduce) {
    transition: none;
  }

  scrollbar-width: none; /* Firefox */

  &::-webkit-scrollbar {
    display: none;
  }

  > * {
    flex: 1 0 auto;
    width: 100%;
    box-sizing: border-box;
    overflow: auto;
  }

  &.n-measure > * {
    position: absolute;
  }
}

.n-carousel--simple {
  display: flex;
  scroll-snap-type: both mandatory;
  overflow: auto;
  scrollbar-width: none; /* Firefox */

  &::-webkit-scrollbar {
    display: none;
  }

  > * {
    flex: 1 0 auto;
    width: 100%;
    scroll-snap-align: center;
  }
}

.n-carousel:not(.n-carousel--vertical) {
  > .n-carousel__content {
    overflow-x: auto;
    // width: var(--subpixel-compensation);

    &:after {
      content: "";
      flex-shrink: 0;
      // 	        padding-inline-end: inherit;
      width: var(--peek-x, 0); // Fixed value option
      height: 1px;
    }
  }
  &:not(.n-carousel--auto-height) > {
    .n-carousel__content > * {
      overflow: auto;
    }
  }
  &.n-carousel--auto-height > {
    .n-carousel__content {
      overflow-y: hidden;
    }
  }
}

[data-ready].n-carousel--auto-height:not(.n-carousel--vertical)
  > .n-carousel__content {
  > :not([data-active]) {
    height: 0;
    overflow: visible;
  }
}

.n-carousel--vertical:not(.n-carousel--auto-height) > .n-carousel__content,
.n-carousel--vertical[data-ready] > .n-carousel__content {
  flex-direction: column;
}
.n-carousel.n-carousel--vertical {
  > .n-carousel__content {
    overflow-y: auto;
    height: 100%;
    box-sizing: content-box;

    > * {
      // 			height: var(--height, inherit); // Fallback not working in Safari
      height: inherit; // Fallback not working in Safari
      // overflow: hidden;
    }
  }

  &:not(.n-carousel--controls-outside) {
    > .n-carousel__index {
      position: absolute;
      max-height: 100%;
      overflow: auto;
      justify-content: initial;
      // &,
      // button {
      //   display: block;
      // }
    }
    &.n-carousel--controls-end {
      > .n-carousel__index {
        right: 0; // To do: RTL
        grid-area: auto;
      }
    }
  }
}

[dir="rtl"] .n-carousel.n-carousel--vertical {
  &.n-carousel--controls-end {
    > .n-carousel__index {
      right: auto;
      left: 0;
    }
  }
}

// Chrome/FF can't scrollTo while scroll snapping is active. Safari can, but it can't toggle snapping programmatically without resetting scroll offset.

_::-webkit-full-page-media,
_:future,
:root .n-carousel[data-sliding] > .n-carousel__content {
  scroll-snap-type: both mandatory;
  > * {
    scroll-snap-align: center;
  }
}

// Because macOS-only Safari can't swipe backwards when pointer events are re-enabled.

@supports not (-webkit-touch-callout: none) {
  _::-webkit-full-page-media,
  _:future,
  :root .n-carousel[data-sliding] {
    pointer-events: all;
  }
}

.n-carousel__index,
.n-carousel__previous,
.n-carousel__next {
  button {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    user-select: none;
    all: revert;
    border: none;
    color: var(--control-color, #333);
    background: var(--control-bg, #eee);
    min-width: 42px; // Minimum touch target
    min-height: 42px;
    border-radius: 42px;
    cursor: pointer;
    margin: 0.5em;
    font: inherit;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    padding: 0;
    &[disabled] {
      opacity: 0.5;
      color: darkblue;
    }
  }
}

// LTR & RTL chevrons – but what about RTL defined by CSS 'direction' instead of the 'dir' attribute?

.n-carousel__previous,
.n-carousel__next {
  button {
    span {
      // Screen readers only
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      white-space: nowrap;
      border: 0;
    }
    &:before {
      content: "";
      background-color: var(--control-color, #333);
      --chevron: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Cpath d='M16.003 18.626l7.081-7.081L25 13.46l-8.997 8.998-9.003-9 1.917-1.916z'/%3E%3C/svg%3E");
      -webkit-mask: var(--chevron) no-repeat 0 0 / contain;
      mask: var(--chevron) no-repeat 0 0;
      width: 1em;
      height: 1em;
      display: inline-block;
    }
  }
}

.n-carousel__previous,
[dir="rtl"] .n-carousel__next {
  button:before {
    transform: rotate(90deg);
  }
}

.n-carousel__next,
[dir="rtl"] .n-carousel__previous {
  button:before {
    transform: rotate(-90deg);
  }
}

.n-carousel--vertical > .n-carousel__next {
  button:before {
    transform: none;
  }
}
.n-carousel--vertical > .n-carousel__previous {
  button:before {
    transform: rotate(180deg);
  }
}

.n-carousel--vertical[data-ready].n-carousel--auto-height
  > .n-carousel__content {
  overflow: hidden;
  overflow-y: auto;
}

@keyframes carousel-css-only {
  100% {
    height: 100%;
  }
}

/* .n-carousel[data-ready] > .n-carousel--auto-height:not(.n-carousel--vertical) > :not([data-active]), */
.n-carousel:not([data-ready]) > .n-carousel--auto-height > :not(:first-child) {
  height: 0;
  animation: carousel-css-only 2 0.1s linear 1s forwards;
}

.n-carousel:not([data-ready]) > .n-carousel--auto-height > :first-child {
  min-height: 100%;
}

> .n-carousel__content > :not([data-active]):not(:last-child) {
  overflow: auto;
}

.n-carousel {
  &[data-sliding] {
    pointer-events: none;
  }
  &:not([data-sliding]) > .n-carousel__content {
    scroll-snap-type: both mandatory;

    > * {
      scroll-snap-align: center;
    }
  }

  display: grid;
  grid-template: 1fr auto 1fr / auto 1fr auto 1fr auto;
  position: relative;

  grid-template-areas:
    "a3 	a3 		a3 		a3 		a3"
    "prev 	a2 		a2 		a2 		next"
    "i		i	 	i 	i		i";

  &.n-carousel--controls-align-start {
    grid-template: auto 1fr auto / auto auto 1fr auto;
    grid-template-areas:
      "a3 a3 a3 a3"
      "prev a2 a2 next"
      "i i b2 b2";

    &.n-carousel.n-carousel--controls-top:not(.n-carousel--controls-outside) {
      grid-template-areas:
        "i i b1 b2 b2"
        "prev a3 a3 a3 next";
    }
  }

  &.n-carousel--controls-align-end {
    grid-template: 1fr auto 1fr / auto 1fr auto auto;
    grid-template-areas:
      "a3 a3 a3 a3"
      "prev a2 a2 next"
      " b2 b2 i i";
    &.n-carousel.n-carousel--controls-top:not(.n-carousel--controls-outside) {
      grid-template-areas:
        "b1 b1 b2 i i"
        "prev a3 a3 a3 next";
    }
  }

  > .n-carousel__content {
    // To do: support intermediate container, while not affecting nested carousels

    grid-row: 1/-1;
    grid-column: 1/-1;
  }

  > :not(.n-carousel__content) {
    z-index: 1;
  }

  > .n-carousel__previous {
    grid-area: prev;
    align-self: center;
  }

  > .n-carousel__next {
    grid-area: next;
    align-self: center;
  }

  > .n-carousel__index {
    grid-area: i;
    align-self: end;
    justify-content: center;
    overflow: auto;
    white-space: nowrap;
  }

  &.n-carousel--controls-start {
    .n-carousel__index {
      justify-content: flex-start;
    }
  }

  &.n-carousel--controls-end {
    > .n-carousel__index {
      justify-content: flex-end;
    }
  }

  &.n-carousel--controls-top {
    grid-template-areas:
      "i		i	 	i 	i		i"
      "prev 	a3 		a3 		a3 		next";
    > .n-carousel__index {
      align-self: start;
    }
  }

  &.n-carousel--controls-outside {
    grid-template-areas:
      "a1 	a1 			a1"
      "prev 	content  	next"
      "i 	i	 	i";

    grid-template-columns: auto 1fr auto;

    > .n-carousel__content {
      grid-area: content;
    }

    &.n-carousel--controls-top {
      grid-template-areas:
        "i 	i 		i"
        "prev 	content  	next"
        "a3 	a3	 		a3";
    }

    &.n-carousel--controls-align-start > .n-carousel__index {
      text-align: start;
    }
    &.n-carousel--controls-align-end > .n-carousel__index {
      text-align: end;
    }
  }

  &.n-carousel--vertical {
    grid-template-areas:
      "i 	a1 	prev 	a2 	a2"
      "i	a3 	a3 		a3 	a3"
      "i 	a4 	next	a5 	a5";

    > .n-carousel__index {
      align-self: center;
      display: flex;
      flex-direction: column;
    }

    &.n-carousel--controls-end {
      grid-template-areas:
        "a1 	a1 	prev	a2 	i"
        "a3		a3 	a3 		a3 	i"
        "a4 	a4 	next 	a5 	i";

      &.n-carousel--controls-align-start:not(.n-carousel--controls-end) {
        grid-template: 1fr auto auto/auto auto 1fr auto;
        grid-template-areas:
          "a1 	a1 	prev	a2 	i"
          "a3		a3 	a3 		a3 	i"
          "a4 	a4 	next 	a5 	b2";

        > .n-carousel__index {
          align-self: start;
        }
      }
      &.n-carousel--controls-align-start {
        grid-template: 1fr auto auto/auto auto 1fr auto;
        grid-template-areas:
          "a1 	a1 	prev	a2 	i"
          "a3		a3 	a3 		a3 	i"
          "a4 	a4 	next 	a5 	a5";

        > .n-carousel__index {
          align-self: start;
        }
      }
      &.n-carousel--controls-align-end {
        grid-template: 1fr auto auto/auto auto 1fr auto;
        grid-template-areas:
          "a1 	a1 	prev	a2 	a2"
          "a3		a3 	a3 		a3 	i"
          "a4 	a4 	next 	a5 	i";

        > .n-carousel__index {
          align-self: end;
        }
      }
    }

    > .n-carousel__previous {
      align-self: start;
    }

    > .n-carousel__next {
      align-self: end;
    }

    &.n-carousel--controls-align-start:not(.n-carousel--controls-end):not(.n-carousel--controls-outside) {
      grid-template-areas:
        "i a1 prev a2 a2"
        "i a3 a3 a3 a3"
        "b2 a4 next a5 a5";
    }

    &.n-carousel--controls-align-end {
      grid-template: 1fr auto 1fr / auto 1fr auto 1fr auto;
      grid-template-areas:
        "b1 a1 prev a2 a2"
        "i a3 a3 a3 a3"
        "i a4 next a5 a5";
    }
  }

  &.n-carousel--vertical.n-carousel--controls-outside {
    grid-template-areas:
      "i 		prev		a2"
      "i 		content  	a2"
      "i 		next	 	a2";
    grid-template-rows: auto 1fr auto;

    &.n-carousel--controls-align-start {
      > .n-carousel__index {
        align-self: start;
      }
    }

    &.n-carousel--controls-align-end {
      grid-template-columns: auto 1fr auto;
      > .n-carousel__index {
        align-self: end;
      }
    }

    &.n-carousel--controls-end {
      grid-template-areas:
        "a1 		prev		i"
        "a1 		content  	i"
        "a1 		next	 	i";

      &.n-carousel--controls-align-start {
        grid-template-columns: auto 1fr auto;
      }
    }
    > .n-carousel__index {
      max-height: var(--height-minus-index, none);
    }
    &[data-sliding] {
      > .n-carousel__index {
        position: absolute;
        margin-inline-start: calc(-1 * var(--index-width));
      }
      &.n-carousel--controls-end {
        padding-inline-end: var(--index-width);
        > .n-carousel__index {
          margin-inline-start: calc(1 * var(--index-width));
        }
      }
      &:not(.n-carousel--controls-end) {
        padding-inline-start: var(--index-width);
      }
      overflow: hidden;
    }
  }

  &.n-carousel--tabs {
    > .n-carousel__index {
      display: flex;
      flex-wrap: wrap;
      justify-content: start;

      button {
        border-radius: 0;
        margin: 0;
        display: flex;
        justify-content: flex-start;
        padding: 0.5ch 1ch;
        text-align: start;
        word-break: break-word;

        &:focus {
          z-index: 0;
        }
      }
    }

    &.n-carousel--tabs-align-end > .n-carousel__index {
      button {
        text-align: end;
      }
    }

    > .n-carousel__previous,
    > .n-carousel__next {
      display: none;
    }
  }
}

@-moz-document url-prefix() {
  .n-carousel--vertical > .n-carousel__content {
    // FF doesn't respect the end padding of the vertical carousel. Can't use this for all, bc it breaks Safari

    display: block;

    > :last-child {
      margin-block-end: var(--peek-y, 0);
    }
  }
}

.n-carousel--lightbox {
  flex: 1;
  figure {
    height: 100%;
    display: grid;
    grid-template: 1fr auto/auto;
    border: 0.1px solid transparent;
    box-sizing: border-box;
    > * {
      grid-row: 1/3;
      grid-column: 1/1;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    > figcaption {
      grid-row: 2/3;
      justify-self: center;
      padding: 0.5em 0.75em;
      background: rgba(0, 0, 0, 0.3);
      color: #ddd;
    }
  }
  img {
    display: block;
    max-height: 100%;
    max-width: 100%;
    object-fit: contain;
  }
  iframe,
  video {
    border: none;
    margin: auto;
    max-width: 100%;
    max-height: 100%;
  }
}

// Vertical, Controls outside

// .n-carousel.n-carousel--vertical.n-carousel--controls-outside
//   > .n-carousel__index {
//   position: absolute;
//   top: 0;
//   margin-inline-start: calc(-1 * var(--index-size, 3.25em));
//   max-height: 100%;
//   overflow: auto;
// }
//
// .n-carousel.n-carousel--vertical.n-carousel--controls-outside
//   > .n-carousel__content {
//   padding-inline-end: var(--index-size, 3.25em);
// }
