.n-carousel__content {
	
	display: flex;
	will-change: scroll;
	box-sizing: content-box;
	padding: var(--peek-y, 0) var(--peek-x, 0);
	
	@media (prefers-reduced-motion: reduce) {
	
		transition: none;
	
	}
	
	&:not([data-sliding]) {

		scroll-snap-type: both mandatory;
		
		> * {
			
			scroll-snap-align: center;
			
		}
	
	}

	scrollbar-width: none; /* Firefox */

	&::-webkit-scrollbar {
	
		display: none;
	
	}
 
	> * {

		flex: 1 0 auto;
		width: 100%;
		box-sizing: border-box;
		overflow: auto;

	}

	&[data-sliding] {

		pointer-events: none;
		
	}
	
/*
	> :not([data-active]):last-child, &[data-sliding] > *:last-child {
			
	    -webkit-mask: linear-gradient(0, #000, #000);
	    mask: linear-gradient(0, #000, #000);

	}
*/
	
}

:not(.n-carousel--vertical) > .n-carousel__content {
	
	overflow-x: auto;

	&:after {

	    content: '';
        flex-shrink: 0;
// 	        padding-inline-end: inherit;
	    width: var(--peek-x, 0); // Fixed value option


	}

	&:not(.n-carousel--auto) > * {
		
		overflow: auto;
		
	}
	
}

[data-ready]:not(.n-carousel--vertical) > .n-carousel__content {
	
	&.n-carousel--auto {
		
		> :not([data-active]) {
			
			height: 0;
			overflow: visible;
			
		}	
		
	}

}

.n-carousel--vertical > .n-carousel__content {
	
	overflow-y: auto;
	flex-direction: column;
	
	> * {
		
// 			height: var(--height, inherit); // Fallback not working in Safari
		height: inherit; // Fallback not working in Safari
		overflow: hidden;

	}
	

}

// Chrome/FF can't scrollTo while scroll snapping is active. Safari can, but it can't toggle snapping programmatically without resetting scroll offset.

_::-webkit-full-page-media, _:future, :root .n-carousel__content[data-sliding] {

	scroll-snap-type: both mandatory;
	
}

_::-webkit-full-page-media, _:future, :root .n-carousel__content[data-sliding] > * {

	scroll-snap-align: center;

}

// Because macOS-only Safari can't swipe backwards when pointer events are re-enabled.

@supports not (-webkit-touch-callout: none) {

	_::-webkit-full-page-media, _:future, :root .n-carousel__content[data-sliding] {
	
		pointer-events: all;
	
	}

}

.n-carousel__index, .n-carousel__previous, .n-carousel__next {

	 button {

		-webkit-touch-callout: none;
	    -webkit-user-select: none;
	    user-select: none;		
		all: revert;
		border: none;
		background: #eee;
		min-width: 42px;
		min-height: 42px;
		border-radius: 42px;
		cursor: pointer;
		margin: .25em;
	    font: inherit;
	    text-align: center;
		
		&[disabled] {
			
			opacity: .5;
	
		}
	
	}

}

// LTR & RTL chevrons – but what about RTL defined by CSS 'direction' instead of the 'dir' attribute?

.n-carousel__previous, [dir="rtl"] .n-carousel__next {

	button:before {
		 
		 content: '⬅';
	
	}

}

.n-carousel__next, [dir="rtl"] .n-carousel__previous {

	button:before {
		 
		 content: '➡';
	
	}

}

.n-carousel--vertical > .n-carousel__next, .n-carousel--vertical > .n-carousel__previous {
	
	button:before {
		
		content: '';

	}	
	
}

.n-carousel--vertical > .n-carousel__content.n-carousel--auto {
	
	overflow: hidden;
	overflow-y: auto;

}

/* .n-carousel[data-ready] > .n-carousel--auto:not(.n-carousel--vertical) > :not([data-active]), */ .n-carousel:not([data-ready]) > .n-carousel--auto > :not(:first-child) {
	
	height: 0;
	
}

.n-carousel:not([data-ready]) > .n-carousel__content > :not([data-active]):not(:last-child) {
	
	overflow: auto;
	
}

.n-carousel {
		
	display: grid;
	grid-template: auto 1fr/auto 1fr auto 1fr auto;

    grid-template-areas:
        "prev 	a2 		a2 		a2 		next"
        "b1		b1	 	index 	b2		b2";
	
	> .n-carousel__content { // To do: support intermediate container, while not affecting nested carousels
		
	    grid-row: 1/-1;
	    grid-column: 1/-1;
    		
	}
	
	> :not(.n-carousel__content) {
		
	    z-index: 1;
    		
	}
	
	> .n-carousel__previous {
		
		grid-area: prev;
    		
	}
    
	> .n-carousel__next {

		grid-area: next;

	}

	> .n-carousel__index {

		grid-area: index;
		align-self: end;
		justify-content: center;
    
	}

	&.n-carousel--controls-start {
	
		.n-carousel__index {
			
			justify-content: flex-start;
			
		}	

	}
	
	&.n-carousel--controls-end {
	
		.n-carousel__index {
			
			justify-content: flex-end;
			
		}	

	}
	
	&.n-carousel--controls-top {
		
	    grid-template-areas:
	        "b1		b1	 	index 	b2		b2"
	        "prev 	a3 		a3 		a3 		next";
	
	}

	&.n-carousel--controls-outside {
		
	    grid-template-areas:
	        "a1 	a1 			a1"
	        "prev 	content  	next"
	        "b1 	index	 	b2";

		grid-template-columns: auto 1fr auto;

		> .n-carousel__content {
			
			grid-area: content;
    			
		}
		
		&.n-carousel--controls-top {
			
		    grid-template-areas:
		        "b1 	index 		b2"
		        "prev 	content  	next"
		        "a3 	a3	 		a3";
	
		}

	}
	
	&.n-carousel--vertical {
		
	    grid-template-areas:
	        "b1 	a1 	prev 	a2 	a2"
	        "index	a3 	a3 		a3 	a3"
	        "b2 	a4 	next	a5 	a5";
		
		> .n-carousel__index {
	
	        align-self: center;
		    display: flex;
		    flex-direction: column;
    	    
		}
		
		&.n-carousel--controls-end {
	
		    grid-template-areas:
		        "a1 	a1 	prev	a2 	b1"
		        "a3		a3 	a3 		a3 	index"
		        "a4 	a4 	next 	a5 	b2";
    	    
		}
		
		> .n-carousel__previous {
			
	        align-self: start;
    			
		}
		
		> .n-carousel__next {

		    align-self: end;
        			
		}
		
	}

	&.n-carousel--vertical.n-carousel--controls-outside {
		
	    grid-template-areas:
	        "b1 		prev		a2"
	        "index 		content  	a2"
	        "b2 		next	 	a2";

		&.n-carousel--controls-end {
			
		    grid-template-areas:
		        "a1 		prev		b1"
		        "a1 		content  	index"
		        "a1 		next	 	b2";
	
		}

	}
	
	&.n-carousel--tabs {
		
		> .n-carousel__index {
			
			display: flex;
			flex-wrap: wrap;
			
			button {
				
				border-radius: 0;
				margin: 0;
				
				&:focus {
					
					z-index: 0;

				}

			}

		}
		
		> .n-carousel__previous, > .n-carousel__next {
			
			display: none;
			
		}
		
	}
	
}

@-moz-document url-prefix() {

	.n-carousel--vertical > .n-carousel__content { // FF doesn't respect the end padding of the vertical carousel. Can't use this for all, bc it breaks Safari 
		
		display: block;

		> :last-child {
			
			margin-block-end: var(--peek-y, 0);

		}

	}
	
}
